// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id              String    @id @default(uuid())
  name            String
  email           String    @unique
  passwordHash    String
  emailVerifiedAt DateTime?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  refreshTokens       RefreshToken[]
  passwordResetTokens PasswordResetToken[]
  createdLeads        Lead[]
  createdInteractions Interaction[]
  conversionHistories ConversionHistory[]
}

model RefreshToken {
  id        String   @id @default(uuid())
  token     String   @unique
  userId    String
  expiresAt DateTime

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])
}

model PasswordResetToken {
  id        String   @id @default(uuid())
  token     String   @unique
  userId    String
  expiresAt DateTime

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])
}

model Lead {
  id          String     @id @default(uuid())
  name        String
  email       String     @unique
  phone       String
  companyName String?
  status      LeadStatus
  addedById   String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  addedBy User @relation(fields: [addedById], references: [id])

  interactions        Interaction[]
  conversionHistories ConversionHistory[]
}

model Customer {
  id          String         @id @default(uuid())
  name        String
  email       String         @unique
  phone       String
  companyName String?
  status      CustomerStatus

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  interactions        Interaction[]
  conversionHistories ConversionHistory[]
}

model Interaction {
  id              String          @id @default(uuid())
  leadId          String?
  customerId      String?
  interactionType InteractionType
  date            DateTime
  notes           String?
  createdById     String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  lead      Lead?     @relation(fields: [leadId], references: [id], onDelete: Cascade)
  customer  Customer? @relation(fields: [customerId], references: [id], onDelete: Cascade)
  createdBy User      @relation(fields: [createdById], references: [id])
}

model ConversionHistory {
  id             String         @id @default(uuid())
  leadId         String
  customerId     String
  conversionDate DateTime
  notes          String?
  convertedById  String
  conversionType ConversionType

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  lead        Lead     @relation(fields: [leadId], references: [id], onDelete: Cascade)
  customer    Customer @relation(fields: [customerId], references: [id], onDelete: Cascade)
  convertedBy User     @relation(fields: [convertedById], references: [id])
}

enum LeadStatus {
  NEW
  IN_PROGRESS
  CONVERTED
  CLOSED
}

enum CustomerStatus {
  ACTIVE
  INACTIVE
}

enum InteractionType {
  PHONE_CALL
  EMAIL
  MEETING
}

enum ConversionType {
  INITIAL
  REVERTED
  RECONVERTED
}
